{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\personal_project\\\\Traffic-monitor\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyForm = () => {\n  _s();\n  // Use useState for each input field\n  const [City, setCity] = React.useState('');\n  const [State, setState] = React.useState('');\n  const [Country, setCountry] = React.useState('');\n  const [timeInterval, settimeInterval] = React.useState('');\n  const [email, setEmail] = React.useState('');\n\n  // Event handler for the first input field\n  const handleInputChange1 = event => {\n    // Remove spaces from the input value\n    // var sanitizedValue = event.target.value.replace(/\\s/g, '');\n    setCity(event.target.value);\n  };\n  const handleInputChange2 = event => {\n    // Remove spaces from the input value\n    // var sanitizedValue = event.target.value.replace(/\\s/g, '');\n    setState(event.target.value);\n  };\n  const handleInputChange3 = event => {\n    // Remove spaces from the input value\n    // var sanitizedValue = event.target.value.replace(/\\s/g, '');\n    setCountry(event.target.value);\n  };\n\n  // Event handler for the second input field\n  const handleInputChange4 = event => {\n    settimeInterval(event.target.value);\n  };\n  const handleInputChange5 = event => {\n    //the email input type will handle the input value. No need to sanitized the value.\n    setEmail(event.target.value);\n  };\n\n  // Submit handler\n  const handleSubmit = event => {\n    //cancel the default submit action of the form, if the page is reloading.\n    //somehow fixed the error of console.log not running\n    event.preventDefault();\n    var regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (!email.match(regex)) {\n      alert(\"Invalid email format.\");\n      return;\n    }\n    var loading = document.getElementById('loading');\n    var display = document.getElementById('display');\n    loading.innerHTML = '<span class=\"loading heroLoading\"></span>';\n    //'<span class=\"loading heroLoading\"></span>' will automatically \n    //disappear when reload since it is written inside that tag in the DOM not inside the actual html file\n    // Send data to Flask backend\n    fetch('https://traffic-433100.ue.r.appspot.com/data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        city: City,\n        state: State,\n        country: Country,\n        time: timeInterval,\n        clientEmail: email.toLowerCase()\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      // Handle the response from the Flask backend\n      if (result['value'] === 'ERROR2') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;\">ERROR. Can not find the provided city/state/country. Please check your input.</p>';\n      } else if (result['value'] === 'ERROR1') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;>ERROR. Can not verify your email. Please check.</p>';\n      } else if (result['value'] === 'ERROR0') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;\">Failed to connect to the database.</p>';\n      } else if (result['value'] === 'ERROR3') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;>Can not make a request to the traffic incidents API. The location you want to track need to be at most 10,000 km<sup>2</sup>. try narrowing down the location.</p>';\n      } else if (result['value'] === 'ok') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:green;\">You are all set!</p>';\n      } else if ('error' in result && result['error'] === 'ratelimit exceeded') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;\">Too many requests. Try again later.</p>';\n      } else if (result['value'] === 'ERROR4') {\n        loading.innerHTML = '';\n        display.innerHTML = '<p style=\"color:red;\">The database is full! Please check back later.</p>';\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"City\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"heroSubText color\",\n          style: {\n            padding: '0'\n          },\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: City,\n        onChange: handleInputChange1,\n        name: \"City\",\n        id: \"City\",\n        class: \"inputField\",\n        maxlength: \"9999\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"State\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"inputText color\",\n          children: \"State (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: State,\n        onChange: handleInputChange2,\n        name: \"State\",\n        id: \"State\",\n        class: \"inputField\",\n        maxlength: \"9999\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Country\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"inputText color\",\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Country,\n        onChange: handleInputChange3,\n        name: \"Country\",\n        id: \"Country\",\n        class: \"inputField\",\n        maxlength: \"9999\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"timeInterval\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"inputText color\",\n          children: \"Time interval (minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"inputSubText color\",\n          children: \"The city's traffic will be checked after every this amount of time. Minimum is 10 mins.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 96\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: timeInterval,\n        onChange: handleInputChange4,\n        id: \"timeInterval\",\n        name: \"timeInterval\",\n        min: \"1\",\n        max: \"999999\",\n        step: \"1\",\n        placeholder: \"10-999999\",\n        required: true,\n        class: \"inputField2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"inputText color\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleInputChange5,\n        id: \"email\",\n        name: \"email\",\n        required: true,\n        class: \"inputField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 132\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"START!\",\n        class: \"button color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(MyForm, \"RqgAAChcgY6DefnhWVaOJ+lVTxI=\");\n_c = MyForm;\nexport const Form2 = () => {\n  _s2();\n  const [email, setEmail] = React.useState('');\n  const handleInputChange = event => {\n    //the email input type will handle the input value. No need to sanitized the value.\n    setEmail(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(email);\n    var display = document.getElementById('display');\n    fetch('https://traffic-433100.ue.r.appspot.com/unregister', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        clientEmail: email\n      })\n    }).then(response => response.json()).then(result => {\n      if (result['value'] === \"Email does not exist in the database. Please check the entered email.\") {\n        display.innerHTML = '<p style=\"color:red;\">Email does not exist in the database. Please check the entered email.</p>';\n      } else if (result['value'] === 'ERROR0') {\n        display.innerHTML = '<p style=\"color:red;\">Failed to connect to the database.</p>';\n      } else if ('error' in result && result['error'] === 'ratelimit exceeded') {\n        display.innerHTML = '<p style=\"color:red;\">Too many requests. Try again later.</p>';\n      } else {\n        display.innerHTML = '<p style=\"color:green;\">Unregisted successfully</p>';\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"unregister\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"unregisterItem\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Want to stop receiving emails? Enter your email to unregistser:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"unregisterItem\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleInputChange,\n          id: \"email\",\n          name: \"email\",\n          required: true,\n          class: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"unregisterItem\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          class: \"button color\",\n          style: {\n            margin: '0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 7\n  }, this);\n};\n\n//export default {MyForm, Form2};\n_s2(Form2, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c2 = Form2;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyForm\");\n$RefreshReg$(_c2, \"Form2\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","MyForm","_s","City","setCity","useState","State","setState","Country","setCountry","timeInterval","settimeInterval","email","setEmail","handleInputChange1","event","target","value","handleInputChange2","handleInputChange3","handleInputChange4","handleInputChange5","handleSubmit","preventDefault","regex","match","alert","loading","document","getElementById","display","innerHTML","fetch","method","headers","body","JSON","stringify","city","state","country","time","clientEmail","toLowerCase","then","response","json","result","console","log","catch","error","children","onSubmit","for","class","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","name","id","maxlength","required","min","max","step","placeholder","_c","Form2","_s2","handleInputChange","margin","_c2","$RefreshReg$"],"sources":["C:/Users/thang/personal_project/Traffic-monitor/client/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport const MyForm = () => {\r\n    // Use useState for each input field\r\n    const [City, setCity] = React.useState('');\r\n    const [State, setState] = React.useState('');\r\n    const [Country, setCountry] = React.useState('');\r\n    const [timeInterval, settimeInterval] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n  \r\n    // Event handler for the first input field\r\n    const handleInputChange1 = (event) => {\r\n      // Remove spaces from the input value\r\n      // var sanitizedValue = event.target.value.replace(/\\s/g, '');\r\n      setCity(event.target.value);\r\n    };\r\n    const handleInputChange2 = (event) => {\r\n      // Remove spaces from the input value\r\n      // var sanitizedValue = event.target.value.replace(/\\s/g, '');\r\n      setState(event.target.value);\r\n    };\r\n    const handleInputChange3 = (event) => {\r\n      // Remove spaces from the input value\r\n      // var sanitizedValue = event.target.value.replace(/\\s/g, '');\r\n      setCountry(event.target.value);\r\n    };\r\n  \r\n    // Event handler for the second input field\r\n    const handleInputChange4 = (event) => {\r\n      settimeInterval(event.target.value);\r\n    };\r\n  \r\n    const handleInputChange5 = (event) => {\r\n      //the email input type will handle the input value. No need to sanitized the value.\r\n      setEmail(event.target.value);\r\n    };\r\n  \r\n    // Submit handler\r\n    const handleSubmit = (event) => {\r\n      //cancel the default submit action of the form, if the page is reloading.\r\n      //somehow fixed the error of console.log not running\r\n      event.preventDefault();\r\n      var regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      if (!email.match(regex)) {\r\n        alert(\"Invalid email format.\");\r\n        return\r\n      }\r\n      var loading = document.getElementById('loading');\r\n      var display = document.getElementById('display');\r\n      loading.innerHTML = '<span class=\"loading heroLoading\"></span>';\r\n      //'<span class=\"loading heroLoading\"></span>' will automatically \r\n      //disappear when reload since it is written inside that tag in the DOM not inside the actual html file\r\n      // Send data to Flask backend\r\n      fetch('https://traffic-433100.ue.r.appspot.com/data', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ city: City, state: State, country: Country, time: timeInterval, clientEmail : email.toLowerCase() }),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          console.log(result);\r\n          // Handle the response from the Flask backend\r\n          if (result['value'] === 'ERROR2') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;\">ERROR. Can not find the provided city/state/country. Please check your input.</p>';\r\n            } else if((result['value']) === 'ERROR1') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;>ERROR. Can not verify your email. Please check.</p>';\r\n          } else if (result['value'] === 'ERROR0') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;\">Failed to connect to the database.</p>';\r\n          } else if (result['value'] === 'ERROR3') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;>Can not make a request to the traffic incidents API. The location you want to track need to be at most 10,000 km<sup>2</sup>. try narrowing down the location.</p>';\r\n          } else if (result['value'] === 'ok') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:green;\">You are all set!</p>';\r\n          }  else if (('error' in result) && result['error'] === 'ratelimit exceeded') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;\">Too many requests. Try again later.</p>';\r\n          } else if (result['value'] === 'ERROR4') {\r\n            loading.innerHTML = '';\r\n            display.innerHTML = '<p style=\"color:red;\">The database is full! Please check back later.</p>';\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n    };\r\n    return (\r\n      <>\r\n        <form onSubmit={handleSubmit}>\r\n           <label for =\"City\"><p class = \"heroSubText color\" style={{padding:'0'}}>City:</p></label>\r\n            <input type=\"text\" value ={City} onChange={handleInputChange1} name=\"City\" id = \"City\" class=\"inputField\" maxlength=\"9999\" required/>\r\n            <label for =\"State\"><p class = \"inputText color\">State (optional):</p></label>\r\n            <input type=\"text\" value ={State} onChange={handleInputChange2} name=\"State\" id = \"State\" class=\"inputField\" maxlength=\"9999\"/>\r\n            <label for =\"Country\"><p class = \"inputText color\">Country:</p></label>\r\n            <input type=\"text\" value ={Country} onChange={handleInputChange3} name=\"Country\" id = \"Country\" class=\"inputField\" maxlength=\"9999\" required/>\r\n            <label for=\"timeInterval\"><p class = \"inputText color\">Time interval (minutes):</p><p  class = \"inputSubText color\">The city's traffic will be checked after every this amount of time. Minimum is 10 mins.</p></label>\r\n            <input type=\"number\" value={timeInterval} onChange={handleInputChange4} id=\"timeInterval\" name=\"timeInterval\" min=\"1\" max = \"999999\"step=\"1\" placeholder=\"10-999999\" required class=\"inputField2\"/>\r\n            <label for =\"email\"><p class = \"inputText color\">Email:</p></label>\r\n            <input type = \"email\" value={email} onChange={handleInputChange5} id=\"email\" name=\"email\" required class=\"inputField\"/><br/>\r\n            <input type = \"submit\" value = \"START!\" class = \"button color\"/>\r\n        </form>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport const Form2 = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const handleInputChange = (event) => {\r\n      //the email input type will handle the input value. No need to sanitized the value.\r\n      setEmail(event.target.value);\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log(email)\r\n      var display = document.getElementById('display');\r\n      fetch('https://traffic-433100.ue.r.appspot.com/unregister', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({clientEmail: email}),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          if (result['value'] === \"Email does not exist in the database. Please check the entered email.\"){\r\n            display.innerHTML = '<p style=\"color:red;\">Email does not exist in the database. Please check the entered email.</p>';\r\n          } else if (result['value'] === 'ERROR0') {\r\n            display.innerHTML = '<p style=\"color:red;\">Failed to connect to the database.</p>';\r\n          } else if (('error' in result) && result['error'] === 'ratelimit exceeded') {\r\n            display.innerHTML = '<p style=\"color:red;\">Too many requests. Try again later.</p>';\r\n          } else {\r\n            display.innerHTML = '<p style=\"color:green;\">Unregisted successfully</p>';\r\n          }\r\n        }\r\n      )\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n    }\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n      <div class=\"unregister\">\r\n        <div class=\"unregisterItem\"><label for =\"email\"><span>Want to stop receiving emails? Enter your email to unregistser:</span></label></div>\r\n        <div class=\"unregisterItem\"><input type = \"email\" value={email} onChange={handleInputChange} id=\"email\" name=\"email\" required class=\"inputField\"/></div>\r\n        <div class=\"unregisterItem\"><input type = \"submit\" value = \"Submit\" class = \"button color\" style={{margin:'0'}}/></div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n//export default {MyForm, Form2};"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGf,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACA;IACAX,OAAO,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD,MAAMC,kBAAkB,GAAIH,KAAK,IAAK;IACpC;IACA;IACAR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAME,kBAAkB,GAAIJ,KAAK,IAAK;IACpC;IACA;IACAN,UAAU,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAIL,KAAK,IAAK;IACpCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMI,kBAAkB,GAAIN,KAAK,IAAK;IACpC;IACAF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMK,YAAY,GAAIP,KAAK,IAAK;IAC9B;IACA;IACAA,KAAK,CAACQ,cAAc,CAAC,CAAC;IACtB,IAAIC,KAAK,GAAG,sEAAsE;IAClF,IAAI,CAACZ,KAAK,CAACa,KAAK,CAACD,KAAK,CAAC,EAAE;MACvBE,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IACA,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAChD,IAAIC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAChDF,OAAO,CAACI,SAAS,GAAG,2CAA2C;IAC/D;IACA;IACA;IACAC,KAAK,CAAC,8CAA8C,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEnC,IAAI;QAAEoC,KAAK,EAAEjC,KAAK;QAAEkC,OAAO,EAAEhC,OAAO;QAAEiC,IAAI,EAAE/B,YAAY;QAAEgC,WAAW,EAAG9B,KAAK,CAAC+B,WAAW,CAAC;MAAE,CAAC;IAC5H,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB;MACA,IAAIA,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QAChCpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,yGAAyG;MAC7H,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAM,QAAQ,EAAE;QAC1CpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,0EAA0E;MAChG,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvCpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,8DAA8D;MACpF,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvCpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,yLAAyL;MAC/M,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;QACnCpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,8CAA8C;MACpE,CAAC,MAAO,IAAK,OAAO,IAAIgB,MAAM,IAAKA,MAAM,CAAC,OAAO,CAAC,KAAK,oBAAoB,EAAE;QAC3EpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,+DAA+D;MACrF,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvCpB,OAAO,CAACI,SAAS,GAAG,EAAE;QACtBD,OAAO,CAACC,SAAS,GAAG,0EAA0E;MAChG;IACF,CAAC,CAAC,CACDmB,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EACD,oBACErD,OAAA,CAAAE,SAAA;IAAAoD,QAAA,eACEtD,OAAA;MAAMuD,QAAQ,EAAE/B,YAAa;MAAA8B,QAAA,gBAC1BtD,OAAA;QAAOwD,GAAG,EAAE,MAAM;QAAAF,QAAA,eAACtD,OAAA;UAAGyD,KAAK,EAAG,mBAAmB;UAACC,KAAK,EAAE;YAACC,OAAO,EAAC;UAAG,CAAE;UAAAL,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxF/D,OAAA;QAAOgE,IAAI,EAAC,MAAM;QAAC7C,KAAK,EAAGd,IAAK;QAAC4D,QAAQ,EAAEjD,kBAAmB;QAACkD,IAAI,EAAC,MAAM;QAACC,EAAE,EAAG,MAAM;QAACV,KAAK,EAAC,YAAY;QAACW,SAAS,EAAC,MAAM;QAACC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrI/D,OAAA;QAAOwD,GAAG,EAAE,OAAO;QAAAF,QAAA,eAACtD,OAAA;UAAGyD,KAAK,EAAG,iBAAiB;UAAAH,QAAA,EAAC;QAAiB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9E/D,OAAA;QAAOgE,IAAI,EAAC,MAAM;QAAC7C,KAAK,EAAGX,KAAM;QAACyD,QAAQ,EAAE7C,kBAAmB;QAAC8C,IAAI,EAAC,OAAO;QAACC,EAAE,EAAG,OAAO;QAACV,KAAK,EAAC,YAAY;QAACW,SAAS,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/H/D,OAAA;QAAOwD,GAAG,EAAE,SAAS;QAAAF,QAAA,eAACtD,OAAA;UAAGyD,KAAK,EAAG,iBAAiB;UAAAH,QAAA,EAAC;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvE/D,OAAA;QAAOgE,IAAI,EAAC,MAAM;QAAC7C,KAAK,EAAGT,OAAQ;QAACuD,QAAQ,EAAE5C,kBAAmB;QAAC6C,IAAI,EAAC,SAAS;QAACC,EAAE,EAAG,SAAS;QAACV,KAAK,EAAC,YAAY;QAACW,SAAS,EAAC,MAAM;QAACC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9I/D,OAAA;QAAOwD,GAAG,EAAC,cAAc;QAAAF,QAAA,gBAACtD,OAAA;UAAGyD,KAAK,EAAG,iBAAiB;UAAAH,QAAA,EAAC;QAAwB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAAA/D,OAAA;UAAIyD,KAAK,EAAG,oBAAoB;UAAAH,QAAA,EAAC;QAAuF;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvN/D,OAAA;QAAOgE,IAAI,EAAC,QAAQ;QAAC7C,KAAK,EAAEP,YAAa;QAACqD,QAAQ,EAAE3C,kBAAmB;QAAC6C,EAAE,EAAC,cAAc;QAACD,IAAI,EAAC,cAAc;QAACI,GAAG,EAAC,GAAG;QAACC,GAAG,EAAG,QAAQ;QAAAC,IAAI,EAAC,GAAG;QAACC,WAAW,EAAC,WAAW;QAACJ,QAAQ;QAACZ,KAAK,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnM/D,OAAA;QAAOwD,GAAG,EAAE,OAAO;QAAAF,QAAA,eAACtD,OAAA;UAAGyD,KAAK,EAAG,iBAAiB;UAAAH,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnE/D,OAAA;QAAOgE,IAAI,EAAG,OAAO;QAAC7C,KAAK,EAAEL,KAAM;QAACmD,QAAQ,EAAE1C,kBAAmB;QAAC4C,EAAE,EAAC,OAAO;QAACD,IAAI,EAAC,OAAO;QAACG,QAAQ;QAACZ,KAAK,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAA/D,OAAA;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5H/D,OAAA;QAAOgE,IAAI,EAAG,QAAQ;QAAC7C,KAAK,EAAG,QAAQ;QAACsC,KAAK,EAAG;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC,gBACP,CAAC;AAEP,CAAC;AAAC3D,EAAA,CA1GSD,MAAM;AAAAuE,EAAA,GAANvE,MAAM;AA4GnB,OAAO,MAAMwE,KAAK,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvB,MAAM,CAAC9D,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMsE,iBAAiB,GAAI5D,KAAK,IAAK;IACnC;IACAF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMK,YAAY,GAAIP,KAAK,IAAK;IAC9BA,KAAK,CAACQ,cAAc,CAAC,CAAC;IACtByB,OAAO,CAACC,GAAG,CAACrC,KAAK,CAAC;IAClB,IAAIkB,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAChDG,KAAK,CAAC,oDAAoD,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACK,WAAW,EAAE9B;MAAK,CAAC;IAC3C,CAAC,CAAC,CACCgC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAI;MACd,IAAIA,MAAM,CAAC,OAAO,CAAC,KAAK,uEAAuE,EAAC;QAC9FjB,OAAO,CAACC,SAAS,GAAG,iGAAiG;MACvH,CAAC,MAAM,IAAIgB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvCjB,OAAO,CAACC,SAAS,GAAG,8DAA8D;MACpF,CAAC,MAAM,IAAK,OAAO,IAAIgB,MAAM,IAAKA,MAAM,CAAC,OAAO,CAAC,KAAK,oBAAoB,EAAE;QAC1EjB,OAAO,CAACC,SAAS,GAAG,+DAA+D;MACrF,CAAC,MAAM;QACLD,OAAO,CAACC,SAAS,GAAG,qDAAqD;MAC3E;IACF,CACF,CAAC,CACAmB,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EACD,oBACErD,OAAA;IAAMuD,QAAQ,EAAE/B,YAAa;IAAA8B,QAAA,eAC7BtD,OAAA;MAAKyD,KAAK,EAAC,YAAY;MAAAH,QAAA,gBACrBtD,OAAA;QAAKyD,KAAK,EAAC,gBAAgB;QAAAH,QAAA,eAACtD,OAAA;UAAOwD,GAAG,EAAE,OAAO;UAAAF,QAAA,eAACtD,OAAA;YAAAsD,QAAA,EAAM;UAA+D;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1I/D,OAAA;QAAKyD,KAAK,EAAC,gBAAgB;QAAAH,QAAA,eAACtD,OAAA;UAAOgE,IAAI,EAAG,OAAO;UAAC7C,KAAK,EAAEL,KAAM;UAACmD,QAAQ,EAAEY,iBAAkB;UAACV,EAAE,EAAC,OAAO;UAACD,IAAI,EAAC,OAAO;UAACG,QAAQ;UAACZ,KAAK,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxJ/D,OAAA;QAAKyD,KAAK,EAAC,gBAAgB;QAAAH,QAAA,eAACtD,OAAA;UAAOgE,IAAI,EAAG,QAAQ;UAAC7C,KAAK,EAAG,QAAQ;UAACsC,KAAK,EAAG,cAAc;UAACC,KAAK,EAAE;YAACoB,MAAM,EAAC;UAAG;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;;AAEH;AAAAa,GAAA,CA9CaD,KAAK;AAAAI,GAAA,GAALJ,KAAK;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}